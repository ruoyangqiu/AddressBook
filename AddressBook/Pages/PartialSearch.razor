@page "/Psearch"
@using AddressBook.Data
@inject AddressService objAddressService
@inject NavigationManager NavigationManager

<h2>Address Partial Search</h2>
<form>
    <div class="form-group">
        <label for="AddressLine1" class="control-label">Address Line 1</label>
        <input for="AddressLine1" class="form-control" @bind="@objAddressLine.AddressLine1" />
        <label class="font-italic text-black-50">Street address, P.O. box, company name, c/o</label>
    </div>

    <div class="form-group">
        <label for="AddressLine2" class="control-label">Address Line 2</label>
        <input for="AddressLine2" class="form-control" @bind="@objAddressLine.AddressLine2" />
        <label class="font-italic text-black-50">Apartment, suite, unit, building, floor, etc.</label>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-primary" @onclick="@SearchAddress" value="Search" />
                <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>
    @if (SearchButtonClicked)
    {
        @if (resList.Count == 0)
        {
            <div class="form-group">
                <label for="NotFound" class="control-label">Address Not Found</label>
            </div>
        }
        @for (var i = 0; i < resList.Count; i++)
        {
            foreach (var countryFormat in countryFormatList)
            {
                if (countryFormat.Name == resList[i].Country)
                {
                    selectedCountryFormat = countryFormat;
                }
            }
            <div class="form-group">
                <label for="AddressLine1" class="control-label">Address Line 1: </label>
                <label for="AddressLine1" class="control-label">@resList[i].AddressLine1</label>
            </div>

            <div class="form-group">
                <label for="AddressLine2" class="control-label">Address Line 2: </label>
                <label for="AddressLine2" class="control-label">@resList[i].AddressLine2</label>
            </div>

            @if (selectedCountryFormat.HasAddressLine3)
            {
                <div class="form-group">
                    <label for="AddressLine3" class="control-label">Address Line 3</label>
                    <label for="AddressLine3" class="control-label">"@resList[i].AddressLine3" </label>
                </div>
            }

            <div class="form-group">
                <label for="Country" class="control-label">Country: </label>
                <label for="AdminArea" class="control-label">@resList[i].Country</label>
            </div>

            <div class="form-group">
                <label for="AdminArea" class="control-label">@selectedCountryFormat.AdminAreaDisplayName: </label>
                <label for="AdminArea" class="control-label">@resList[i].AdminArea</label>
            </div>



            @if (selectedCountryFormat.HasLocality)
            {
                <div class="form-group">
                    <label for="Locality" class="control-label">@selectedCountryFormat.LocalityDisplayName: </label>
                    <label for="Locality" class="control-label">@resList[i].Locality</label>
                </div>
            }

            @if (selectedCountryFormat.HasSublocality)
            {
                <div class="form-group">
                    <label for="Sublocality" class="control-label">@selectedCountryFormat.SublocalityDisplayName: </label>
                    <label for="Sublocality" class="control-label" @bind="@resList[i].Sublocality" />
                </div>
            }

            <div class="form-group">
                <label for="PostalCode" class="control-label">Postal Code: </label>
                <label for="PostalCode" class="control-label">@resList[i].PostalCode</label>
            </div>

            @if (selectedCountryFormat.HasExtraData)
            {
                <div class="form-group">
                    <label for="ExtraData" class="control-label">Extra Data: </label>
                    <label for="ExtraData" class="control-label">@resList[i].ExtraData</label>
                </div>
            }

        }
    }
</form>

@code {
    AddressLine objAddressLine = new AddressLine();
    List<Address> resList = new List<Address>();
    List<CountryFormat> countryFormatList;
    CountryFormat selectedCountryFormat;
    bool SearchButtonClicked = false;

    protected override async Task OnInitializedAsync()
    {
        countryFormatList = await Task.Run(() => objAddressService.GetAllCountryFormats());
        selectedCountryFormat = new CountryFormat();
    }

    protected void SearchAddress()
    {
        resList = objAddressService.GetAddressByPartialAddress(objAddressLine.AddressLine1, objAddressLine.AddressLine2);
        SearchButtonClicked = true;
    }

    void OKClicked()
    {
        NavigationManager.NavigateTo("/index");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("/index");
    }

}
