@page "/Index"
@using AddressBook.Data
@inject AddressService objAddressService

<h2>Address Index</h2>
<hr />
@if (objAddresses == null)
{
    <p><em>Loading....</em></p>
}
else
{
    <p>Found @numAddresses Addresses</p>
    <table class="table">
        <thead>
            <tr>
                <th>Line1</th>
                <th>Line2</th>
                <th>Line3</th>
                <th>Country</th>
                <th>Administrative Area</th>
                <th>Locality</th>
                <th>Sublocality</th>
                <th>Postal Code</th>
                <th>Extra Data</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var address in objAddresses)
            {
            <tr>
                <td>@address.AddressLine1</td>
                <td>@address.AddressLine2</td>
                <td>@address.AddressLine3</td>
                <td>@address.Country</td>
                <td>@address.AdminArea</td>
                <td>@address.Locality</td>
                <td>@address.Sublocality</td>
                <td>@address.PostalCode</td>
                <td>@address.ExtraData</td>
                @*<td>

            <a class="nav-link" href="EditAddress/@address.Id">
                <span class="oi oi-pencil" aria-hidden="true"></span>Edit
            </a>

        </td>
        <td>
            <a class="nav-link" href="DeleteAddress/@address.Id">
                <span class="oi oi-trash" aria-hidden="true"></span>Delete
            </a>
        </td>*@
            </tr>
            }
        </tbody>
    </table>

}

@code {
    List<Address> objAddresses;
    long numAddresses;
    protected override async Task OnInitializedAsync()
    {
        objAddresses = await Task.Run(() => objAddressService.GetAllAddresses());
        numAddresses = await Task.Run(() => objAddressService.GetNumOfAddresses());
    }
}
