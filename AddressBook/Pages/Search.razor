@page "/Search"
@using AddressBook.Services
@using AddressBook.Data
@inject AddressService objAddressService
@inject NavigationManager NavigationManager

<h2>Search Address</h2>
<hr />
@*Dynamic Form*@
<form>
    <div class="row">
        <div class="col-md-8">
            @if (selectedCountryFormat == null)
            {
                <em>Loading...</em>
            }
            else
            {
                <div class="form-group">
                    <label for="Country" class="control-label">Country</label>
                    <select class="form-control" @onchange="@UpdateFormFormat">
                        <option value=""></option>
                        @if (countryFormatList != null)
                        {
                            foreach (var countryFormat in countryFormatList)
                            {
                                <option value="@countryFormat.Id">@countryFormat.Name</option>
                            }

                        }
                    </select>
                </div>

                <div class="form-group">
                    <label for="AddressLine1" class="control-label">Address Line 1</label>
                    <input for="AddressLine1" class="form-control" @bind="@objAddress.AddressLine1" />
                    <label class="font-italic text-black-50">Street address, P.O. box, company name, c/o</label>
                </div>

                <div class="form-group">
                    <label for="AddressLine2" class="control-label">Address Line 2</label>
                    <input for="AddressLine2" class="form-control" @bind="@objAddress.AddressLine2" />
                    <label class="font-italic text-black-50">Apartment, suite, unit, building, floor, etc.</label>
                </div>

                @if (selectedCountryFormat.HasAddressLine3)
                {
                    <div class="form-group">
                        <label for="AddressLine3" class="control-label">Address Line 3</label>
                        <input for="AddressLine3" class="form-control" @bind="@objAddress.AddressLine3" />
                    </div>
                }


                @if (selectedCountryFormat.AdminAreas == null)
                {
                    <div class="form-group">
                        <label for="AdminArea" class="control-label">@selectedCountryFormat.AdminAreaDisplayName</label>
                        <input for="AdminArea" class="form-control" @bind="@objAddress.AdminArea" />
                    </div>
                }
                else
                {
                    <div class="form-group">
                        <label for="AdminArea" class="control-label">@selectedCountryFormat.AdminAreaDisplayName</label>
                        <select class="form-control" @bind="@objAddress.AdminArea">
                            <option value=""></option>
                            @foreach (var adminArea in selectedCountryFormat.AdminAreas)
                            {
                                <option value="@adminArea">@adminArea</option>
                            }
                        </select>
                    </div>
                }

                @if (selectedCountryFormat.HasLocality)
                {
                    <div class="form-group">
                        <label for="Locality" class="control-label">@selectedCountryFormat.LocalityDisplayName</label>
                        <input for="Locality" class="form-control" @bind="@objAddress.Locality" />
                    </div>
                }

                @if (selectedCountryFormat.HasSublocality)
                {
                    <div class="form-group">
                        <label for="Sublocality" class="control-label">@selectedCountryFormat.SublocalityDisplayName</label>
                        <input for="Sublocality" class="form-control" @bind="@objAddress.Sublocality" />
                    </div>
                }

                <div class="form-group">
                    <label for="PostalCode" class="control-label">Postal Code</label>
                    <input for="PostalCode" class="form-control" @bind="@objAddress.PostalCode" />
                </div>

                @if (selectedCountryFormat.HasExtraData)
                {
                    <div class="form-group">
                        <label for="ExtraData" class="control-label">Extra Data</label>
                        <input for="ExtraData" class="form-control" @bind="@objAddress.ExtraData" />
                    </div>
                }

            }

        </div>
    </div>

    <div style="padding-bottom:15px">
        <input name="checkBox"
               type="checkbox"
               @onchange="@OnCheckBoxChanged"
               value="true" />Only show exact matches
    </div>

    <div class="form-group">
        <input type="button" class="btn btn-primary" @onclick="@SearchAddress" value="Search" />
    </div>

    @if (SearchButtonClicked)
    {
        @if (FoundAddress)
        {

            <div class="row">
                <div class="col-md-8">
                    <div class="form-group">
                        <input type="button" class="btn btn-primary" @onclick="@OKClicked" value="Clear Output" />
                    </div>
                    <ul class="list-group">
                        @foreach (var resAddress in @resList)
                        {
                            <li class="list-group-item">
                                <div class="form-group">
                                    <label for="AddressLine1" class="control-label">Address Line 1: </label>
                                    <label for="AddressLine1" class="control-label">@resAddress.AddressLine1</label>
                                </div>

                                <div class="form-group">
                                    <label for="AddressLine2" class="control-label">Address Line 2: </label>
                                    <label for="AddressLine2" class="control-label">@resAddress.AddressLine2</label>
                                </div>

                                @if (selectedCountryFormat.HasAddressLine3)
                                {
                                    <div class="form-group">
                                        <label for="AddressLine3" class="control-label">Address Line 3</label>
                                        <label for="AddressLine3" class="control-label">"@resAddress.AddressLine3" </label>
                                    </div>
                                }

                                <div class="form-group">
                                    <label for="Country" class="control-label">Country: </label>
                                    <label for="AdminArea" class="control-label">@resAddress.Country</label>
                                </div>

                                <div class="form-group">
                                    <label for="AdminArea" class="control-label">@selectedCountryFormat.AdminAreaDisplayName: </label>
                                    <label for="AdminArea" class="control-label">@resAddress.AdminArea</label>
                                </div>



                                @if (selectedCountryFormat.HasLocality)
                                {
                                    <div class="form-group">
                                        <label for="Locality" class="control-label">@selectedCountryFormat.LocalityDisplayName: </label>
                                        <label for="Locality" class="control-label">@resAddress.Locality</label>
                                    </div>
                                }

                                @if (selectedCountryFormat.HasSublocality)
                                {
                                    <div class="form-group">
                                        <label for="Sublocality" class="control-label">@selectedCountryFormat.SublocalityDisplayName: </label>
                                        <label for="Sublocality" class="control-label" @bind="@resAddress.Sublocality" />
                                    </div>
                                }

                                <div class="form-group">
                                    <label for="PostalCode" class="control-label">Postal Code: </label>
                                    <label for="PostalCode" class="control-label">@resAddress.PostalCode</label>
                                </div>

                                @if (selectedCountryFormat.HasExtraData)
                                {
                                    <div class="form-group">
                                        <label for="ExtraData" class="control-label">Extra Data: </label>
                                        <label for="ExtraData" class="control-label">@resAddress.ExtraData</label>
                                    </div>
                                }
                            </li>
                        }
                    </ul>
                </div>
            </div>


        }
        else
        {
            <div class="form-group">
                <label for="NotFound" class="control-label">Address Not Found</label>
            </div>
        }

    }


</form>

<hr />

@code {
    Address objAddress = new Address();
    List<CountryFormat> countryFormatList;
    CountryFormat selectedCountryFormat;
    bool SearchButtonClicked = false;
    bool FoundAddress = false;
    bool isWholeSearch = false;
    List<Address> resList;

    protected override async Task OnInitializedAsync()
    {
        countryFormatList = await Task.Run(() => objAddressService.GetAllCountryFormats());
        selectedCountryFormat = new CountryFormat();
    }

    protected void SearchAddress()
    {
        if (isWholeSearch)
        {
            resList = objAddressService.GetAddressByWholeAddress(objAddress);
        }
        else
        {
            resList = objAddressService.GetAddressByPartialAddress(objAddress);
        }

        if (resList.Count != 0)
        {
            FoundAddress = true;
        }
        else
        {
            FoundAddress = false;
        }

        SearchButtonClicked = true;
    }

    void OKClicked()
    {
        SearchButtonClicked = false;
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("/index");
    }
    void UpdateFormFormat(ChangeEventArgs e)
    {
        var countryFormatId = e.Value.ToString();
        if (countryFormatId == "")
        {
            return;
        }
        selectedCountryFormat = objAddressService.GetCountryFormat(countryFormatId);
        objAddress = new Address(); // reset the address data
        objAddress.Country = selectedCountryFormat.Name;
    }

    void OnCheckBoxChanged(ChangeEventArgs e)
    {
        isWholeSearch = (bool)e.Value;
    }
}
